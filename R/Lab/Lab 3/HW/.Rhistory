mean(Book2$Total)
library(readr)
Book2 <- read_csv("C:/Users/Krishna Warfade/OneDrive/Desktop/R/Lab/Lab 3/Book2.csv")
View(Book2)
mean(Book2$Total)
getmode(Book2$Total)
mean(Book2$Total)
getmode <- function(V) {
uniqv <- unique(V)
uniqv[which.max(tabulate(match(V, uniqv)))]
}
getmode(Book2$Total)
median(Book2$Total)
max(Book2$Total)
min(Book2$Total)
range(Book2$Total)
summary(Book2$Total)
pie(table(Book2$`UG/PG`))
plot(Book2$`HSC/UG`)
mean(Book2$Total)
getmode <- function(V) {
uniqv <- unique(V)
uniqv[which.max(tabulate(match(V, uniqv)))]
}
getmode(Book2$Total)
median(Book2$Total)
max(Book2$Total)
min(Book2$Total)
range(Book2$Total)
summary(Book2$Total)
pie(table(Book2$`UG/PG`))
plot(Book2$`HSC/UG`)
data()
View(mtcars)
summary(mtcars)
names(mtcars)
data()
View(mtcars)
data()
View(mtcars)
# Load the dataset
data(mtcars)
# Create an empty list to store numerical variables
numerical_vars <- c()
# Loop through each column and check if it's numeric
for (col in names(mtcars)) {
if (is.numeric(mtcars[[col]])) {
numerical_vars <- c(numerical_vars, col)  # Add to list if numeric
}
}
# Print the numerical variable names
print(numerical_vars)
#Q1.
car <- "BMW"
#Q2.
speed <- 120
#Q3.
x <- 20
y <- 10
z <- x + y * x - y
#Q4.
myVar <- 100
class(myVar)
#Q6.
array1 <- c(-10:10)
array2 <- rep(c(1), 20)
array3 <- seq(5, 125, 5)
length(array1)
length(array2)
length(array3)
barplot(mtcars$cyl)
barplot(mtcars $ cyl, xlab = "Car Variant", ylab = "cyl")
barplot(mtcars $ cyl, xlab = "Car Variant", ylab = "cyl", main = "MTCARS")
barplot(mtcars $ cyl, xlab = "Car Variant", ylab = "cyl", main = "MOTORCARS")
# Find numerical columns
numerical_vars <- sapply(mtcars, is.numeric)
# Print only numerical variable names
names(mtcars[, numerical_vars])
barplot(mtcars $ cyl, xlab = "Car Variant", ylab = "cyl", main = "MOTORCARS")
structure(mtcars)
str(mtcars)
data()
View(mtcars)
str(mtcars) #structure of datasets ("num" = numeric)
barplot(mtcars $ cyl, xlab = "Car Variant", ylab = "cyl", main = "MOTORCARS")
nums <- c(2.3, 4.4, 5, 5, 6, 6.5, 6.5, 6.5, 6.5,
8.6, 9.2, 4.4, 4.4, 5.4, 5, 2, 4.4)
nums <- c(2.3, 4.4, 5, 5, 6, 6.5, 6.5, 6.5, 6.5,
8.6, 9.2, 4.4, 4.4, 5.4, 5, 2, 4.4)
nums <- c(2.3, 4.4, 5, 5, 6, 6.5, 6.5, 6.5, 6.5,
8.6, 9.2, 4.4, 4.4, 5.4, 5, 2, 4.4)
mean(nums)
median(nums)
getmode <- function(X) {
uniqx <- unique(X)
uniqx[which.max(tabulate(match(X, uniqx)))]
}
getmode(nums)
min(nums)
max(nums)
range(nums)
data("iris")
summary(iris)
data(iris)
summary(iris)
sapply(nums, class)
nums <- c(2.3, 4.4, 5, 5, 6, 6.5, 6.5, 6.5, 6.5,
8.6, 9.2, 4.4, 4.4, 5.4, 5, 2, 4.4)
mean(nums)
median(nums)
getmode <- function(X) {
uniqx <- unique(X)
uniqx[which.max(tabulate(match(X, uniqx)))]
}
getmode(nums)
min(nums)
max(nums)
range(nums)
library(readr)
Book2 <- read_csv("Book2.csv")
View(Book2)
mode(Book2$Total)
class(Book2$Total)
x <- table(Book2$Total)
View(x)
mode <- names(x)[which(x == max(x)]
mode <- names(x)[which(x == max(x))]
mode(Book2$Total)
getmode(Book2$Total)
print(mode)
uniqt <- [which.max(tabulate(match(t, uniqt)))]
mode <- function(t) {
uniqt <- unique(t)
uniqt <- uniqt[which.max(tabulate(match(t, uniqt)))]
}
mode(Book2$Total)
print(mode(Book2$Total))
mode <- function(t) {
uniqt <- unique(t)
uniqt <- uniqt[which.max(tabulate(match(t, uniqt)))]
}
mode(Book2$Total)
mode(Book2$Total)
paste(mode(Book2$Total))
mode <- function(t) {
uniqt <- unique(t)
uniqt[which.max(tabulate(match(t, uniqt)))]
}
paste(mode(Book2$Total))
data()
View(mtcars)
str(mtcars) #structure of datasets ("num" = numeric)
barplot(mtcars $ cyl, xlab = "Car Variant", ylab = "cyl", main = "MOTORCARS")
print(t1[t1$Height > 5.2,])
t1 <- data.frame(Height = c(5, 5.1, 5.2, 5.12, 5.5),
No_of_Students = c(10, 15, 20, 12, 11))
View(t1)
print(t1[t1$Height > 5.2,])
install.packages("dplyr")
library(dplyr)
# Create a data frame
data <- data.frame(
friend_id = c(1, 2, 3, 4, 5),
friend_name = c("Sachin", "Sourav", "Dravid", "Sehwag", "Dhoni"),
location = c("Kolkata", "Delhi", "Bangalore", "Hyderabad", "Chennai")
)
data
# Remove a row with friend_id = 3
data <- subset(data, friend_id != 3) #Syntax: subset(df, expr)
data
#OR
dnew <- subset(data, select = -c(friend_id = 4))
dnew
dnew <- subset(data, select = -c(friend_id = 4))
dnew
#OR
dnew <- subset(data, select = -c(friend_id = 4))
dnew
dnew
##5J, 3C, 2NC, 4 selected
hello <- function() {
Jazz <- 0:4
Prob <- choose(5, Jazz) * choose(5, 4 - Jazz) / choose(10, 4)
data.frame(Jazz, Prob)
}
hldf <- hello()
View(hldf)
